<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="robot_name">
    <xacro:macro name="sweeper_cam" params="">

        <xacro:property name="camera_link" value="0.3"/>
    
        <!-- camera -->
        <gazebo reference="right_camara">
            <sensor type="camera" name="camera1">
                <update_rate>30.0</update_rate>
                <camera name="test">
                    <horizontal_fov>1.3962634</horizontal_fov>
                    <image>
                        <width>800</width>
                        <height>800</height>
                        <format>R8G8B8</format>
                    </image>
                    <clip>
                        <near>0.02</near>
                        <far>300</far>
                    </clip>
                    <noise>
                        <type>gaussian</type>
                        <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
                        <mean>0.0</mean>
                        <stddev>0.007</stddev>
                    </noise>
                </camera>
                <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                    <alwaysOn>true</alwaysOn>
                    <updateRate>0.0</updateRate>
                    <cameraName>sweeper/camera1</cameraName>
                    <imageTopicName>image_raw</imageTopicName>
                    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                    <frameName>right_camara</frameName>
                    <hackBaseline>0.07</hackBaseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                </plugin>
            </sensor>
        </gazebo>

        <!-- Camera -->
        <!-- <link name="test">
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="${camera_link} ${camera_link} ${camera_link}"/>
                </geometry>
            </collision>

            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="${camera_link} ${camera_link} ${camera_link}"/>
                </geometry>
                <material name="red"/>
                <material>
                    <color rgba="1.0 0.0 0.0 1.0"/>
                </material>
            </visual>

            <inertial>
                <mass value="1e-5" />
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
            </inertial>
        </link>

        <joint name="camera_joint" type="fixed">
            <axis xyz="0 1 0" />
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <parent link="chasis"/>
            <child link="test"/>
        </joint> -->

        <link name="right_camara">
            <inertial>
                <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
                <mass value="0.0"/>
                <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
            </inertial>
            <visual name="">
                <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
                <geometry>
                    <!-- <box size="0.1 0.1 0.1"/> -->
                    <!-- <mesh filename="package://sweep_bot/meshes/orbbec_astra_camera.dae"/> -->
                    <mesh filename="package://sweep_bot/meshes/model.sdf"/>
                    <!-- <mesh filename="package://velodyne_description/meshes/VLP16_base_1.dae" /> -->
                </geometry>
                <!-- <material name="">
                    <color rgba="0.0 0.0 1.0 1.0"/>
                    <texture filename=""/>
                </material> -->
            </visual>
            <collision>
                <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
                <geometry>
                    <box size="0.0 0.0 0.0"/>
                </geometry>
            </collision>
        </link>
        <joint name="right_camera_joint" type="fixed">
            <origin xyz="0.45 ${chasis_width / 1.85} 0.0" rpy="0.0 0.0 0.0"/>
            <parent link="chasis"/>
            <child link="right_camara"/>
            <!-- <axis xyz="0.0 0.0 0.0"/> -->
            <!-- <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0"/> -->
        </joint>

    </xacro:macro>




    <!-- overwatch camara -->

    <xacro:macro name="overwatch_cam" params="">

        <xacro:property name="overwatch_camera_link" value="0.3"/>
    
        <!-- over-watch camera -->
        <gazebo reference="overwatch_camara">
            <sensor type="camera" name="camera1">
                <update_rate>30.0</update_rate>
                <camera name="test">
                    <horizontal_fov>1.3962634</horizontal_fov>
                    <image>
                        <width>800</width>
                        <height>800</height>
                        <format>R8G8B8</format>
                    </image>
                    <clip>
                        <near>0.02</near>
                        <far>300</far>
                    </clip>
                    <noise>
                        <type>gaussian</type>
                        <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
                        <mean>0.0</mean>
                        <stddev>0.007</stddev>
                    </noise>
                </camera>
                <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                    <alwaysOn>true</alwaysOn>
                    <updateRate>0.0</updateRate>
                    <cameraName>sweeper/camera1</cameraName>
                    <imageTopicName>image_raw</imageTopicName>
                    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                    <frameName>overwatch_camara</frameName>
                    <hackBaseline>0.07</hackBaseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                </plugin>
            </sensor>
        </gazebo>

        <link name="overwatch_camara">
            <inertial>
                <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
                <mass value="0.0"/>
                <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
            </inertial>
            <visual name="">
                <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
                <geometry>
                    <!-- <mesh filename="package://sweep_bot/meshes/model.sdf"/> -->
                    <box size="0.0 0.0 0.0"/>
                </geometry>
            </visual>
            <collision>
                <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
                <geometry>
                    <box size="0.0 0.0 0.0"/>
                </geometry>
            </collision>
        </link>
        <joint name="overwatch_joint" type="fixed">
            <origin xyz="-3.0 ${chasis_width / 1.85} 1.5" rpy="0.0 0.0 0.0"/>
            <parent link="chasis"/>
            <child link="overwatch_camara"/>
        </joint>

    </xacro:macro>
</robot>