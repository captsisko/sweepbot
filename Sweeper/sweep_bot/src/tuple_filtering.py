#!/usr/bin/env python

class Tester :

    # ranges = tuple()

    ranges = (3.369786262512207, 3.3642754554748535, 3.3492584228515625, 3.360173225402832, 3.3452014923095703, 3.3323278427124023, 3.329397678375244, 3.3132452964782715, 3.3153133392333984, 3.3000917434692383, 3.2975945472717285, 3.290581464767456, 3.2854526042938232, 3.2812142372131348, 3.277482509613037, 3.2775442600250244, 3.2630527019500732, 3.264324426651001, 3.2556955814361572, 3.248063087463379, 3.2390480041503906, 3.2370665073394775, 3.2320098876953125, 3.22475528717041, 3.224858045578003, 3.224167823791504, 3.2144176959991455, 3.2233519554138184, 3.208529233932495, 3.2043774127960205, 3.207296133041382, 3.205453634262085, 3.1777215003967285, 3.192978620529175, 3.1764655113220215, 3.1794838905334473, 3.174936294555664, 3.172999858856201, 3.1685054302215576, 3.175022602081299, 3.153388738632202, 3.160993814468384, 3.1569061279296875, 3.1637990474700928, 3.1553103923797607, 3.1601369380950928, 3.1429383754730225, 3.143306016921997, 3.1415789127349854, 3.154775381088257, 3.1416428089141846, 3.1510732173919678, 3.1468043327331543, 3.15390944480896, 3.1397836208343506, 3.1396448612213135, 3.1351523399353027, 3.1424262523651123, 3.1241445541381836, 3.133471727371216, 3.1425561904907227, 3.1274795532226562, 3.148904800415039, 3.1328656673431396, 3.138214111328125, 3.12561297416687, 3.124424934387207, 3.1293208599090576, 3.134056329727173, 3.1396963596343994, 3.133596658706665, 3.131525993347168, 3.1350595951080322, 3.1416878700256348, 3.1290745735168457, 3.136975049972534, 3.130286931991577, 3.158411741256714, 3.1340928077697754, 3.1354610919952393, 3.14133882522583, 3.149153232574463, 3.152397632598877, 3.1612212657928467, 3.150141477584839, 3.142510414123535, 3.1674420833587646, 3.170994758605957, 3.1673943996429443, 3.1673102378845215, 3.173290729522705, 3.1749794483184814, 3.173941135406494, 3.1812760829925537, 3.178101062774658, 3.1852755546569824, 3.1830294132232666, 3.1854050159454346, 3.1917061805725098, 3.19150972366333, 3.191237688064575, 3.201204538345337, 3.206454038619995, 3.2195117473602295, 3.2122530937194824, 3.2290711402893066, 3.2188844680786133, 3.235445737838745, 3.235772132873535, 3.246159315109253, 3.236949920654297, 3.249690055847168, 3.2556726932525635, 3.258903980255127, 3.254880905151367, 3.271522045135498, 3.2809739112854004, 3.2806107997894287, 3.2940518856048584, 3.2838895320892334, 3.298311233520508, 3.301137924194336, 3.32936954498291, 3.3230228424072266, 3.332482099533081, 3.332923173904419, 3.3491852283477783, 3.3348581790924072, 3.362938404083252, 3.367433547973633, 3.372912645339966, 3.392134189605713, 3.3970251083374023, 3.393148899078369, 3.3970813751220703, 3.416806936264038, 3.423085927963257, 3.4361586570739746, 3.4479963779449463, 3.4557344913482666, 3.45161771774292, 3.4654858112335205, 3.4850823879241943, 3.4921224117279053, 3.4970486164093018, 3.519225835800171, 3.5258634090423584, 3.522604465484619, 3.5416452884674072, 3.552841901779175, 3.57139253616333, 3.584825038909912, 3.585681676864624, 3.5880343914031982, 3.601630449295044, 3.6274044513702393, 3.634641408920288, 3.6418614387512207, 3.6661486625671387, 3.6640238761901855, 3.6844422817230225, 3.692614793777466, 3.7222609519958496, 3.720360279083252, 3.745436668395996, 3.7509350776672363, 3.7632358074188232, 3.7840182781219482, 3.7813258171081543, 3.8064849376678467, 3.84393048286438, 3.8364975452423096, 3.867757558822632, 3.8865320682525635, 3.900275945663452, 3.9179599285125732, 3.931058406829834, 3.9367353916168213, 3.968879461288452, 3.9670300483703613, 3.9862184524536133, 4.014191150665283, 4.023865699768066, 4.0539751052856445, 4.078033924102783, 4.102909088134766, 4.104513168334961, 4.1306681632995605, 4.140932559967041, 4.176848411560059, 4.195528030395508, 4.210159778594971, 4.2429704666137695, 4.258073806762695, 4.286526203155518, 4.317701816558838, 4.328798294067383, 4.338041305541992, 4.385350227355957, 4.394516944885254, 4.4318528175354, 4.450087070465088, 4.478113651275635, 4.499581813812256, 4.538715839385986, 4.560736179351807, 4.589637756347656, 4.613096237182617, 4.644355297088623, 4.6747894287109375, 4.722146511077881, 4.737471580505371, 4.762291431427002, 4.816153526306152, 4.8331828117370605, 4.847692966461182, 4.89900541305542, 4.928029537200928, 4.954681873321533, 5.0071611404418945, 5.047837257385254, 5.0831708908081055, 5.1110711097717285, 5.146961688995361, 5.192984104156494, 5.238976955413818, 5.270658493041992, 5.328577041625977, 5.36535120010376, 5.3989057540893555, 5.458242893218994, 5.500365734100342, 5.543155670166016, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0)


    regions = {}

    def __init__(self) :
        print("Tester class initiated")

    def clean(self, set) :
        set_list = list(set)
        occurances = set_list.count(26.0)
        print('Occurances: %d' %(occurances))
        while set_list.count(26.0) :
            set_list.remove(26.0)
        return tuple(set_list)

    def check_laser_regions(self) :

        total =  len(self.ranges)
        print("TOTAL: %f " %(total))

        total =  len( self.clean(self.ranges) )
        print("TOTAL: %f " %(total))




tester = Tester()
tester.check_laser_regions()
